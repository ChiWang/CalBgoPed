#! /usr/bin/python
'''
 *  $Id: JobOpt_BgoPed_fromHex, 2014-10-13 12:15:26 DAMPE $
 *  Author(s):
 *    Chi WANG (chiwang@mail.ustc.edu.cn) 11/03/2014
#-------------------------------------------------------------------
    NOTE:   input data is scientific binary data
'''

#-------------------------------------------------------------------
import DMPSW                    # Load DAMPE software
import libDmpHex2Root as Hex2Root
import libDmpBgoPed as DmpBgoPed

#-------------------------------------------------------------------
# Global setting
#DMPSW.Core.Set("EventNumber","4207")     # If NOT set, will use 1234567890
#DMPSW.Core.Set("FromEvent","100")
#DMPSW.Core.Set("StartTime","20130101-0000")     # if NOT set, start from launch time
#DMPSW.Core.Set("StopTime","20160101-0000")      # if NOT set, end at 2113.01.01
#DMPSW.Core.Set("LogLevel","Warning")      # Value = {Error | Warning | Info | Debug}. If NOT set, will use Info.
#DMPSW.Core.Set("LogHeader","On")

#-------------------------------------------------------------------
# RootIOSvc options
DMPSW.RootIOSvc.Set("Input/Path",DMPSW.WorkPath+"/run/data/sci")
DMPSW.RootIOSvc.Set("Input/FileName","A2_20140912_093933.frd")
DMPSW.RootIOSvc.Set("Output/WriteList","Calibration/Bgo;Metadata/Bgo")  # split by ;
#DMPSW.RootIOSvc.Set("Output/Path",DMPSW.WorkPath+"/run/data/cal/ped")
#DMPSW.RootIOSvc.Set("Output/Path","./rxun")

#-------------------------------------------------------------------
# Creat user's service or algorithm
rdcAlgBT = Hex2Root.DmpAlgHex2Root()
calBgoPed = DmpBgoPed.DmpAlgBgoPed()
rdcAlgBT.Set("Bgo/Connector",DMPSW.WorkPath+"/share/Connector/Bgo/EQM")

DMPSW.AlgMgr.Append(rdcAlgBT)
DMPSW.AlgMgr.Append(calBgoPed)

#-------------------------------------------------------------------
# Run job
DMPSW.Core.Initialize()
DMPSW.Core.Run()
DMPSW.Core.Finalize()

